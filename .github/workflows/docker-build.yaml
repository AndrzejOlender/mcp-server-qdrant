name: Build and Push Docker Image

on:
  workflow_dispatch:
  push:
    branches: [main, master, dev]
    tags:
      - 'v*'
  pull_request:
    branches: [main, master]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Determine package reference
        id: package_ref
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            echo "ref=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            echo "ref=main" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == refs/heads/master ]]; then
            echo "ref=master" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == refs/heads/dev ]]; then
            echo "ref=dev" >> $GITHUB_OUTPUT
          else
            echo "ref=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PACKAGE_REF=${{ steps.package_ref.outputs.ref }}
            PACKAGE_REPO=https://github.com/${{ github.repository }}.git
          cache-from: type=gha
          cache-to: type=gha,mode=max
